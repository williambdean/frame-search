var W=Object.defineProperty;var B=(t,e,n)=>e in t?W(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var m=(t,e,n)=>B(t,typeof e!="symbol"?e+"":e,n);var g;import{s as x}from"./chunk-DZLz74EQ.js";import{d as D,i as G,n as f}from"./jotai-DDOP7CKM.js";import{Dn as K,Dr as P,En as z,Ln as R,Mn as s,Mr as j,Nn as v,Pn as J,U as Q,ar as b,bt as X,dn as Y,fn as Z,hn as ee,ir as w,kn as k,mn as te,pn as ne,un as re}from"./cells-B6jS0AIj.js";import{x as ae}from"./_Uint8Array-D5Z9rM2X.js";import{t as oe}from"./debounce-70y9MzDK.js";import{u as i}from"./hotkeys-Lbk6RHir.js";import{t as I}from"./invariant-DPGusy7Z.js";import{d as ie,g as E}from"./utils-DnJCRgaX.js";import{r as se}from"./config-BjdJmdrN.js";import{Vt as M,bt as u,ot as S,rt as le}from"./dist-BPcMnGQn.js";import{D as T,O,g as ce,w as me}from"./dist-pZAIwcZo.js";import{n as p}from"./once-Co7xi2Ip.js";import{t as ue}from"./requests-D3Z6okhb.js";import{t as de}from"./use-toast-BiL_AQz9.js";import{a as ge}from"./connection-DnLUBy9M.js";import{r as pe}from"./useNonce-DECX9FAH.js";var he="Expected a function";function fe(t,e,n){var a=!0,o=!0;if(typeof t!="function")throw TypeError(he);return ae(n)&&(a="leading"in n?!!n.leading:a,o="trailing"in n?!!n.trailing:o),oe(t,e,{leading:a,maxWait:e,trailing:o})}var ve=fe;function we(t){"scheduler"in window?window.scheduler.postTask(t,{priority:"background"}):"requestIdleCallback"in window?requestIdleCallback(t):setTimeout(t,0)}var C=null,Ce=class{constructor(t){m(this,"abortController",new AbortController);this.view=t.view,this.view.dom.addEventListener("focus",()=>{C=new WeakRef(this.view)},{signal:this.abortController.signal,capture:!0}),this.update()}update(){let t=this.view.dom.querySelector(".cm-vimCursorLayer");if(t instanceof HTMLElement)if(Q())t.style.display="none";else{let e=(C==null?void 0:C.deref())===this.view;t.style.display=e?"":"none"}}destroy(){this.abortController.abort()}};const $={map:{args:["lhs","rhs"]},nmap:{mode:"normal",args:["lhs","rhs"]},vmap:{mode:"visual",args:["lhs","rhs"]},imap:{mode:"insert",args:["lhs","rhs"]},noremap:{args:["lhs","rhs"]},nnoremap:{mode:"normal",args:["lhs","rhs"]},vnoremap:{mode:"visual",args:["lhs","rhs"]},inoremap:{mode:"insert",args:["lhs","rhs"]},unmap:{args:["lhs"]},nunmap:{mode:"normal",args:["lhs"]},vunmap:{mode:"visual",args:["lhs"]},iunmap:{mode:"insert",args:["lhs"]},mapclear:{},nmapclear:{mode:"normal"},vmapclear:{mode:"visual"},imapclear:{mode:"insert"}};function ye(t,e){let n=[];for(let a of t.split(`
`)){if(a.startsWith('"')||a.trim()==="")continue;let o=xe(a,e);o&&n.push(o)}return n}function xe(t,e){let n=t.split(/\s+/),a=n[0],o=0;if(a in $){let r=$[a],d={};for(let h of r.args||[])if(o+=1,o<n.length)d[h]=n[o];else{e&&e(`Not enough arguments for "${a}" command: "${t}"`);return}let c={name:a};return"args"in r&&(c.args=d),"mode"in r&&(c.mode=r.mode),c}e&&e(`Unknown vimrc command: "${t}"`)}function Ie(){return De(),be(),[u.of([{key:"j",run:t=>{if(z(t,!0)&&k(t)){let e=t.state.facet(w),n=t.state.facet(b);return e.moveToNextCell({cellId:n,before:!1,noCreate:!0}),!0}return!1}}]),u.of([{key:"k",run:t=>{if(K(t)&&k(t)){let e=t.state.facet(w),n=t.state.facet(b);return e.moveToNextCell({cellId:n,before:!0,noCreate:!0}),!0}return!1}}]),u.of([{linux:"Ctrl-[",win:"Ctrl-[",run:t=>{let e=v(t);return e?q(e)?e.state.vim.insertMode?(s.exitInsertMode(e,!0),!0):!1:(i.warn("Expected CodeMirror instance to have Vim state"),!1):(i.warn("Expected CodeMirror instance to have CodeMirror instance state"),!1)}}]),S.define(t=>(requestAnimationFrame(()=>{V.INSTANCES.addInstance(t)}),{destroy(){V.INSTANCES.removeInstance(t)}})),S.define(t=>new Ce({view:t})),le.domEventHandlers({keydown(t,e){return t.ctrlKey&&t.key==="Escape"?(e.dom.dispatchEvent(new KeyboardEvent(t.type,t)),!0):!1}})]}var De=p(()=>{s.defineAction("goToDefinition",t=>{let e=t.cm6;return R(e)}),s.mapCommand("gd","action","goToDefinition",{},{context:"normal"}),s.defineEx("write","w",t=>{let e=t.cm6;e&&e.state.facet(w).saveNotebook()})}),be=p(async()=>{var e;let t=(e=f.get(E).keymap)==null?void 0:e.vimrc;if(t)try{i.log(`Loading vimrc from ${t}`);let n=(await ue().sendFileDetails({path:t})).contents;if(!n){i.error(`Failed to load vimrc from ${t}`);return}ke(ye(n,i.warn))}catch(n){i.error("Failed to load vimrc:",n)}});function ke(t){function e(r){if(!r.args){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}if(!r.args.lhs||!r.args.rhs){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}r.mode?s.map(r.args.lhs,r.args.rhs,r.mode):s.map(r.args.lhs,r.args.rhs)}function n(r){if(!r.args){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}if(!r.args.lhs||!r.args.rhs){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}r.mode?s.noremap(r.args.lhs,r.args.rhs,r.mode):s.noremap(r.args.lhs,r.args.rhs)}function a(r){if(!r.args){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}if(!r.args.lhs){i.warn(`Could not execute vimrc command "${r.name}: expected arguments"`);return}r.mode?s.unmap(r.args.lhs,r.mode):s.unmap(r.args.lhs)}function o(r){r.mode?s.mapclear(r.mode):s.mapclear()}for(let r of t)"map|nmap|vmap|imap".split("|").includes(r.name)?e(r):"noremap|nnoremap|vnoremap|inoremap".split("|").includes(r.name)?n(r):"unmap|nunmap|vunmap|iunmap".split("|").includes(r.name)?a(r):"mapclear|nmapclear|vmapclear|imapclear".split("|").includes(r.name)?o(r):i.warn(`Could not execute vimrc command "${r.name}: unknown command"`)}var V=(g=class{constructor(){m(this,"instances",new Set);m(this,"isBroadcasting",!1)}addInstance(e){this.instances.add(e);let n=v(e);if(!n){i.warn("Expected CodeMirror instance to have CodeMirror instance state");return}n.on("vim-mode-change",a=>{this.isBroadcasting||(I("mode"in a,'Expected event to have a "mode" property'),this.isBroadcasting=!0,we(()=>{this.broadcastModeChange(e,a.mode,a.subMode),this.isBroadcasting=!1}))})}removeInstance(e){this.instances.delete(e)}broadcastModeChange(e,n,a){I("exitInsertMode"in s,"Vim does not have an exitInsertMode method"),I("exitVisualMode"in s,"Vim does not have an exitVisualMode method");for(let o of this.instances)if(o!==e){let r=v(o);if(!r){i.warn("Expected CodeMirror instance to have CodeMirror instance state");continue}let d=r.setSelections.bind(r);if(r.setSelections=()=>[],!q(r)){i.warn("Expected CodeMirror instance to have Vim state");continue}let c=r.state.vim;switch(n){case"normal":c.insertMode&&s.exitInsertMode(r,!0),c.visualMode&&s.exitVisualMode(r,!0);break;case"insert":c.insertMode||s.handleKey(r,"i","");break;case"visual":break}r.setSelections=d}}},m(g,"INSTANCES",new g),g);function q(t){return t.state.vim!==void 0}const Ee=["default","vim"];function Me(t,e){switch(t.preset){case"default":return[u.of(F()),u.of(N(e))];case"vim":return[u.of(Te()),u.of(N(e)),u.of([{key:"Enter",run:n=>{var a,o;return(o=(a=v(n))==null?void 0:a.state.vim)!=null&&o.insertMode?me(n):!1}}]),M.high(Oe("d",n=>n.state.doc.toString()==="",n=>n.state.doc.toString()===""?(n.state.facet(w).deleteCell(),!0):!1)),J({status:!1}),M.high(Ie())];default:return pe(t.preset),[]}}var Se=new Set([O,T]),F=p(()=>ce.filter(t=>!Se.has(t.run))),N=t=>[{key:t.getHotkey("cell.toggleComment").key,run:O},{key:t.getHotkey("cell.toggleBlockComment").key,run:T}],Te=p(()=>{let t=new Set(["Enter","Ctrl-v"]);return F().filter(e=>!t.has(e.key||e.mac||e.linux||e.win||""))});function Oe(t,e,n){let a="",o=0;return u.of([{any:(r,d)=>{let c=d.key,h=d.timeStamp;return c!==t||!e(r)?(a="",o=0,!1):a===t&&h-o<500&&n(r)?(a="",o=0,!0):(a=c,o=h,!1)}}])}var _="marimo:copilot:signedIn";const $e=j(_,null,X,{getOnInit:!0}),Ve=D(null),y=D(null);function qe(t){f.set(y,t)}function Fe(t){f.get(y)===t&&f.set(y,null)}function Ne(){return P.getItem(_)==="true"}function A(){let t=Ne(),e=ie();return t&&e.completion.copilot==="github"}function _e(){return G(E,t=>t.completion.copilot==="github")}var Ae=x(ne(),1),l=i.get("@github/copilot-language-server"),He=class extends Z{constructor(){super(...arguments);m(this,"documentVersion",0);m(this,"hasOpenedDocument",!1);m(this,"getCompletionInternal",async(e,n)=>await this._request("textDocument/inlineCompletion",{...e,textDocument:{...e.textDocument,version:n}}));m(this,"throttledGetCompletionInternal",ve(this.getCompletionInternal,200))}async _request(e,n){try{return await this.request(e,n)}catch(a){throw l.error("#request: Error",a),a}}async notify(e,n){return l.debug("#notify",e,n),super.notify(e,n)}getInitializationOptions(){let e={name:"marimo",version:"0.1.0"};return{...super.getInitializationOptions(),workspaceFolders:[],capabilities:{workspace:{workspaceFolders:!1}},initializationOptions:{editorInfo:e,editorPluginInfo:e}}}isDisabled(){return!A()}async textDocumentDidOpen(e){return this.isDisabled()?e:(this.hasOpenedDocument=!0,super.textDocumentDidOpen(e))}async textDocumentCompletion(e){return[]}async textDocumentDidChange(e){if(this.isDisabled())return e;this.hasOpenedDocument||await this.textDocumentDidOpen({textDocument:{uri:e.textDocument.uri,languageId:"python",version:e.textDocument.version,text:e.contentChanges[0].text}});let n=e.contentChanges;n.length!==1&&l.warn("#textDocumentDidChange: Multiple changes detected. This is not supported.",n);let a=n[0];"range"in a&&l.warn("#textDocumentDidChange: Copilot doesn't support range changes.",a);let o=re(a.text);return super.textDocumentDidChange({...e,contentChanges:[{text:o}],textDocument:Ae.VersionedTextDocumentIdentifier.create(e.textDocument.uri,++this.documentVersion)})}textDocumentHover(e){return Promise.resolve({contents:[]})}signOut(){return this._request("signOut",{})}async signInInitiate(){l.log("#signInInitiate: Starting sign-in flow");try{let e=await this._request("signIn",{});return l.log("#signInInitiate: Sign-in flow started successfully"),e}catch(e){throw l.warn("#signInInitiate: Failed to start sign-in flow",e),e}}async signInConfirm(e){l.log("#signInConfirm: Confirming sign-in");try{let n=await this._request("signInConfirm",e);return l.log("#signInConfirm: Sign-in confirmed successfully"),n}catch(n){throw l.warn("#signInConfirm: Failed to confirm sign-in",n),n}}async signedIn(){try{let{status:e}=await this._request("checkStatus",{});return l.log("#checkStatus: Status check completed",{status:e}),e==="SignedIn"||e==="AlreadySignedIn"||e==="OK"}catch(e){throw l.warn("#signedIn: Failed to check sign-in status",e),e}}async getCompletion(e){if(this.isDisabled())return null;let n=this.documentVersion;if(e.textDocument.version=n,n===0)return null;qe(n);let a=await this.throttledGetCompletionInternal(e,n);return Fe(n),n===this.documentVersion?a??null:null}},Le=x(te(),1),Ue=x(ee(),1);const H="/__marimo_copilot__.py";var L=`file://${H}`;const We=p(()=>new Be);var Be=class extends Ue.Transport{constructor(){super(),this.delegate=void 0}getWsUrl(){return se().getLSPURL("copilot").toString()}async tryConnect(t=3,e=1e3){for(let n=1;n<=t;n++)try{this.delegate||(this.delegate=new Le.WebSocketTransport(this.getWsUrl())),await this.delegate.connect(),i.log("Copilot#connect: Connected successfully");return}catch(a){if(i.warn(`Copilot#connect: Connection attempt ${n}/${t} failed`,a),n===t)throw this.delegate=void 0,de({variant:"danger",title:"GitHub Copilot Connection Error",description:"Failed to connect to GitHub Copilot. Please check settings and try again."}),a;await new Promise(o=>setTimeout(o,e))}}async connect(){return await _e(),await ge(),this.tryConnect()}close(){var t;(t=this.delegate)==null||t.close(),this.delegate=void 0}async sendData(t,e){var n;return e=Math.min(e??5e3,5e3),(n=this.delegate)==null?void 0:n.sendData(t,e)}};const U=p(()=>new He({rootUri:L,workspaceFolders:null,transport:We()}));function Ge(){return Y({documentUri:L,client:U(),languageId:"copilot",hoverEnabled:!1,completionEnabled:!1,definitionEnabled:!1,renameEnabled:!1,codeActionsEnabled:!1,signatureHelpEnabled:!1,diagnosticsEnabled:!1,sendIncrementalChanges:!1})}export{y as a,Ee as c,Ve as i,Me as l,Ge as n,A as o,U as r,$e as s,H as t};
