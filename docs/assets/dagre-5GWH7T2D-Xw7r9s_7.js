import"./_Uint8Array-D5Z9rM2X.js";import"./isSymbol-xTSywenE.js";import"./_arrayMap-DQI2GUNb.js";import"./toString-CBnct2wx.js";import"./toNumber-CTOPJrpu.js";import"./toInteger-Bor4StOs.js";import"./isArrayLikeObject-DKyJYtr8.js";import"./_getTag-CVRrQL_Q.js";import{r as C}from"./_baseUniq-YWmHDCnr.js";import"./_baseIsEqual-BF8660ot.js";import"./_toKey-Di_xoXjD.js";import"./memoize-CAcr7Wct.js";import"./get-BYzWDFJH.js";import"./_baseFlatten-8yEsQJi9.js";import"./_basePickBy-W59-WIft.js";import"./pick-Ck1LTYI3.js";import"./merge-BgA7kxZb.js";import"./_hasUnicode-CPHpt5EV.js";import"./_arrayReduce-DDpPg0Qh.js";import{t as F}from"./clone-CgXpsEJc.js";import{t as L}from"./dagre-DiwxB2oH.js";import"./_baseEach-Xz5DR2cc.js";import"./hasIn-WaG0qjy7.js";import"./_baseProperty-CIKnF2iY.js";import"./now-B6JN1xKT.js";import{o as D}from"./min-hz9WUEOx.js";import"./_baseMap-DMMHaI20.js";import"./isEmpty-z92iM7uZ.js";import"./_baseSet-BlAtwuhp.js";import"./sortBy-DOR2cy6s.js";import"./range-CPekNdzi.js";import{t as O}from"./graphlib-Hv9lzda0.js";import"./preload-helper-BpItL31i.js";import"./marked.esm-DCf1d_lA.js";import"./purify.es-D83HMRRD.js";import"./timer-9ePNNBwU.js";import"./src-D-O4qgKm.js";import"./path-DE1VIUo_.js";import"./math-Cpuq8NJh.js";import"./array-pmtsE1gt.js";import"./step-DCnHyPDa.js";import"./line-D2-zCSal.js";import"./chunk-S3R3BYOJ-uZNU-Kd7.js";import{n as m,r as i}from"./src-Ci62OB0C.js";import{b as M}from"./chunk-ABZYJK2D-D-T6tPym.js";import"./chunk-7GE3RBXV-Ds_00JTJ.js";import{t as j}from"./chunk-CVBHYZKI-SXlNTOC2.js";import"./chunk-QYVHNE3D-B1-zbM-O.js";import"./dist-D3R7S_yk.js";import"./chunk-JA3XYJ7Z-PWzZnWG4.js";import{a as Y,c as k,i as H,l as _,n as z,t as q,u as K}from"./chunk-CXMOBAN2-CX9vAWIk.js";import{a as Q,i as U,n as V,r as W,t as Z}from"./chunk-3AY6CYHV-B46AUeLq.js";function X(e){var n={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:$(e),edges:ee(e)};return C(e.graph())||(n.value=F(e.graph())),n}function $(e){return D(e.nodes(),function(n){var r=e.node(n),o=e.parent(n),d={v:n};return C(r)||(d.value=r),C(o)||(d.parent=o),d})}function ee(e){return D(e.edges(),function(n){var r=e.edge(n),o={v:n.v,w:n.w};return C(n.name)||(o.name=n.name),C(r)||(o.value=r),o})}var c=new Map,b=new Map,G=new Map,re=m(()=>{b.clear(),G.clear(),c.clear()},"clear"),I=m((e,n)=>{let r=b.get(n)||[];return i.trace("In isDescendant",n," ",e," = ",r.includes(e)),r.includes(e)},"isDescendant"),ne=m((e,n)=>{let r=b.get(n)||[];return i.info("Descendants of ",n," is ",r),i.info("Edge is ",e),e.v===n||e.w===n?!1:r?r.includes(e.v)||I(e.v,n)||I(e.w,n)||r.includes(e.w):(i.debug("Tilt, ",n,",not in descendants"),!1)},"edgeInCluster"),P=m((e,n,r,o)=>{i.warn("Copying children of ",e,"root",o,"data",n.node(e),o);let d=n.children(e)||[];e!==o&&d.push(e),i.warn("Copying (nodes) clusterId",e,"nodes",d),d.forEach(l=>{if(n.children(l).length>0)P(l,n,r,o);else{let a=n.node(l);i.info("cp ",l," to ",o," with parent ",e),r.setNode(l,a),o!==n.parent(l)&&(i.warn("Setting parent",l,n.parent(l)),r.setParent(l,n.parent(l))),e!==o&&l!==e?(i.debug("Setting parent",l,e),r.setParent(l,e)):(i.info("In copy ",e,"root",o,"data",n.node(e),o),i.debug("Not Setting parent for node=",l,"cluster!==rootId",e!==o,"node!==clusterId",l!==e));let s=n.edges(l);i.debug("Copying Edges",s),s.forEach(p=>{i.info("Edge",p);let E=n.edge(p.v,p.w,p.name);i.info("Edge data",E,o);try{ne(p,o)?(i.info("Copying as ",p.v,p.w,E,p.name),r.setEdge(p.v,p.w,E,p.name),i.info("newGraph edges ",r.edges(),r.edge(r.edges()[0]))):i.info("Skipping copy of edge ",p.v,"-->",p.w," rootId: ",o," clusterId:",e)}catch(N){i.error(N)}})}i.debug("Removing node",l),n.removeNode(l)})},"copy"),B=m((e,n)=>{let r=n.children(e),o=[...r];for(let d of r)G.set(d,e),o=[...o,...B(d,n)];return o},"extractDescendants"),te=m((e,n,r)=>{let o=e.edges().filter(s=>s.v===n||s.w===n),d=e.edges().filter(s=>s.v===r||s.w===r),l=o.map(s=>({v:s.v===n?r:s.v,w:s.w===n?n:s.w})),a=d.map(s=>({v:s.v,w:s.w}));return l.filter(s=>a.some(p=>s.v===p.v&&s.w===p.w))},"findCommonEdges"),S=m((e,n,r)=>{let o=n.children(e);if(i.trace("Searching children of id ",e,o),o.length<1)return e;let d;for(let l of o){let a=S(l,n,r),s=te(n,r,a);if(a)if(s.length>0)d=a;else return a}return d},"findNonClusterChild"),T=m(e=>!c.has(e)||!c.get(e).externalConnections?e:c.has(e)?c.get(e).id:e,"getAnchorId"),ie=m((e,n)=>{if(!e||n>10){i.debug("Opting out, no graph ");return}else i.debug("Opting in, graph ");e.nodes().forEach(function(r){e.children(r).length>0&&(i.warn("Cluster identified",r," Replacement id in edges: ",S(r,e,r)),b.set(r,B(r,e)),c.set(r,{id:S(r,e,r),clusterData:e.node(r)}))}),e.nodes().forEach(function(r){let o=e.children(r),d=e.edges();o.length>0?(i.debug("Cluster identified",r,b),d.forEach(l=>{I(l.v,r)^I(l.w,r)&&(i.warn("Edge: ",l," leaves cluster ",r),i.warn("Descendants of XXX ",r,": ",b.get(r)),c.get(r).externalConnections=!0)})):i.debug("Not a cluster ",r,b)});for(let r of c.keys()){let o=c.get(r).id,d=e.parent(o);d!==r&&c.has(d)&&!c.get(d).externalConnections&&(c.get(r).id=d)}e.edges().forEach(function(r){let o=e.edge(r);i.warn("Edge "+r.v+" -> "+r.w+": "+JSON.stringify(r)),i.warn("Edge "+r.v+" -> "+r.w+": "+JSON.stringify(e.edge(r)));let d=r.v,l=r.w;if(i.warn("Fix XXX",c,"ids:",r.v,r.w,"Translating: ",c.get(r.v)," --- ",c.get(r.w)),c.get(r.v)||c.get(r.w)){if(i.warn("Fixing and trying - removing XXX",r.v,r.w,r.name),d=T(r.v),l=T(r.w),e.removeEdge(r.v,r.w,r.name),d!==r.v){let a=e.parent(d);c.get(a).externalConnections=!0,o.fromCluster=r.v}if(l!==r.w){let a=e.parent(l);c.get(a).externalConnections=!0,o.toCluster=r.w}i.warn("Fix Replacing with XXX",d,l,r.name),e.setEdge(d,l,o,r.name)}}),i.warn("Adjusted Graph",X(e)),A(e,0),i.trace(c)},"adjustClustersAndEdges"),A=m((e,n)=>{var d,l;if(i.warn("extractor - ",n,X(e),e.children("D")),n>10){i.error("Bailing out");return}let r=e.nodes(),o=!1;for(let a of r){let s=e.children(a);o||(o=s.length>0)}if(!o){i.debug("Done, no node has children",e.nodes());return}i.debug("Nodes = ",r,n);for(let a of r)if(i.debug("Extracting node",a,c,c.has(a)&&!c.get(a).externalConnections,!e.parent(a),e.node(a),e.children("D")," Depth ",n),!c.has(a))i.debug("Not a cluster",a,n);else if(!c.get(a).externalConnections&&e.children(a)&&e.children(a).length>0){i.warn("Cluster without external connections, without a parent and with children",a,n);let s=e.graph().rankdir==="TB"?"LR":"TB";(l=(d=c.get(a))==null?void 0:d.clusterData)!=null&&l.dir&&(s=c.get(a).clusterData.dir,i.warn("Fixing dir",c.get(a).clusterData.dir,s));let p=new O({multigraph:!0,compound:!0}).setGraph({rankdir:s,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});i.warn("Old graph before copy",X(e)),P(a,e,p,a),e.setNode(a,{clusterNode:!0,id:a,clusterData:c.get(a).clusterData,label:c.get(a).label,graph:p}),i.warn("New graph after copy node: (",a,")",X(p)),i.debug("Old graph after copy",X(e))}else i.warn("Cluster ** ",a," **not meeting the criteria !externalConnections:",!c.get(a).externalConnections," no parent: ",!e.parent(a)," children ",e.children(a)&&e.children(a).length>0,e.children("D"),n),i.debug(c);r=e.nodes(),i.warn("New list of nodes",r);for(let a of r){let s=e.node(a);i.warn(" Now next level",a,s),s!=null&&s.clusterNode&&A(s.graph,n+1)}},"extractor"),J=m((e,n)=>{if(n.length===0)return[];let r=Object.assign([],n);return n.forEach(o=>{let d=J(e,e.children(o));r=[...r,...d]}),r},"sorter"),ae=m(e=>J(e,e.children()),"sortNodesByHierarchy"),R=m(async(e,n,r,o,d,l)=>{i.warn("Graph in recursive render:XAX",X(n),d);let a=n.graph().rankdir;i.trace("Dir in recursive render - dir:",a);let s=e.insert("g").attr("class","root");n.nodes()?i.info("Recursive render XXX",n.nodes()):i.info("No nodes found for",n),n.edges().length>0&&i.info("Recursive edges",n.edge(n.edges()[0]));let p=s.insert("g").attr("class","clusters"),E=s.insert("g").attr("class","edgePaths"),N=s.insert("g").attr("class","edgeLabels"),f=s.insert("g").attr("class","nodes");await Promise.all(n.nodes().map(async function(g){let t=n.node(g);if(d!==void 0){let u=JSON.parse(JSON.stringify(d.clusterData));i.trace(`Setting data for parent cluster XXX
 Node.id = `,g,`
 data=`,u.height,`
Parent cluster`,d.height),n.setNode(d.id,u),n.parent(g)||(i.trace("Setting parent",g,d.id),n.setParent(g,d.id,u))}if(i.info("(Insert) Node XXX"+g+": "+JSON.stringify(n.node(g))),t==null?void 0:t.clusterNode){i.info("Cluster identified XBX",g,t.width,n.node(g));let{ranksep:u,nodesep:w}=n.graph();t.graph.setGraph({...t.graph.graph(),ranksep:u+25,nodesep:w});let y=await R(f,t.graph,r,o,n.node(g),l),x=y.elem;K(t,x),t.diff=y.diff||0,i.info("New compound node after recursive render XAX",g,"width",t.width,"height",t.height),_(x,t)}else n.children(g).length>0?(i.trace("Cluster - the non recursive path XBX",g,t.id,t,t.width,"Graph:",n),i.trace(S(t.id,n)),c.set(t.id,{id:S(t.id,n),node:t})):(i.trace("Node - the non recursive path XAX",g,f,n.node(g),a),await Y(f,n.node(g),{config:l,dir:a}))})),await m(async()=>{let g=n.edges().map(async function(t){let u=n.edge(t.v,t.w,t.name);i.info("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),i.info("Edge "+t.v+" -> "+t.w+": ",t," ",JSON.stringify(n.edge(t))),i.info("Fix",c,"ids:",t.v,t.w,"Translating: ",c.get(t.v),c.get(t.w)),await W(N,u)});await Promise.all(g)},"processEdges")(),i.info("Graph before layout:",JSON.stringify(X(n))),i.info("############################################# XXX"),i.info("###                Layout                 ### XXX"),i.info("############################################# XXX"),L(n),i.info("Graph after layout:",JSON.stringify(X(n)));let h=0,{subGraphTitleTotalMargin:v}=j(l);return await Promise.all(ae(n).map(async function(g){var u;let t=n.node(g);if(i.info("Position XBX => "+g+": ("+t.x,","+t.y,") width: ",t.width," height: ",t.height),t==null?void 0:t.clusterNode)t.y+=v,i.info("A tainted cluster node XBX1",g,t.id,t.width,t.height,t.x,t.y,n.parent(g)),c.get(t.id).node=t,k(t);else if(n.children(g).length>0){i.info("A pure cluster node XBX1",g,t.id,t.x,t.y,t.width,t.height,n.parent(g)),t.height+=v,n.node(t.parentId);let w=(t==null?void 0:t.padding)/2||0,y=((u=t==null?void 0:t.labelBBox)==null?void 0:u.height)||0,x=y-w||0;i.debug("OffsetY",x,"labelHeight",y,"halfPadding",w),await H(p,t),c.get(t.id).node=t}else{let w=n.node(t.parentId);t.y+=v/2,i.info("A regular node XBX1 - using the padding",t.id,"parent",t.parentId,t.width,t.height,t.x,t.y,"offsetY",t.offsetY,"parent",w,w==null?void 0:w.offsetY,t),k(t)}})),n.edges().forEach(function(g){let t=n.edge(g);i.info("Edge "+g.v+" -> "+g.w+": "+JSON.stringify(t),t),t.points.forEach(u=>u.y+=v/2),Q(t,V(E,t,c,r,n.node(g.v),n.node(g.w),o))}),n.nodes().forEach(function(g){let t=n.node(g);i.info(g,t.type,t.diff),t.isGroup&&(h=t.diff)}),i.warn("Returning from recursive render XAX",s,h),{elem:s,diff:h}},"recursiveRender"),oe=m(async(e,n)=>{var l,a,s,p,E,N;let r=new O({multigraph:!0,compound:!0}).setGraph({rankdir:e.direction,nodesep:((l=e.config)==null?void 0:l.nodeSpacing)||((s=(a=e.config)==null?void 0:a.flowchart)==null?void 0:s.nodeSpacing)||e.nodeSpacing,ranksep:((p=e.config)==null?void 0:p.rankSpacing)||((N=(E=e.config)==null?void 0:E.flowchart)==null?void 0:N.rankSpacing)||e.rankSpacing,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),o=n.select("g");U(o,e.markers,e.type,e.diagramId),z(),Z(),q(),re(),e.nodes.forEach(f=>{r.setNode(f.id,{...f}),f.parentId&&r.setParent(f.id,f.parentId)}),i.debug("Edges:",e.edges),e.edges.forEach(f=>{if(f.start===f.end){let h=f.start,v=h+"---"+h+"---1",g=h+"---"+h+"---2",t=r.node(h);r.setNode(v,{domId:v,id:v,parentId:t.parentId,labelStyle:"",label:"",padding:0,shape:"labelRect",style:"",width:10,height:10}),r.setParent(v,t.parentId),r.setNode(g,{domId:g,id:g,parentId:t.parentId,labelStyle:"",padding:0,shape:"labelRect",label:"",style:"",width:10,height:10}),r.setParent(g,t.parentId);let u=structuredClone(f),w=structuredClone(f),y=structuredClone(f);u.label="",u.arrowTypeEnd="none",u.id=h+"-cyclic-special-1",w.arrowTypeStart="none",w.arrowTypeEnd="none",w.id=h+"-cyclic-special-mid",y.label="",t.isGroup&&(u.fromCluster=h,y.toCluster=h),y.id=h+"-cyclic-special-2",y.arrowTypeStart="none",r.setEdge(h,v,u,h+"-cyclic-special-0"),r.setEdge(v,g,w,h+"-cyclic-special-1"),r.setEdge(g,h,y,h+"-cyc<lic-special-2")}else r.setEdge(f.start,f.end,{...f},f.id)}),i.warn("Graph at first:",JSON.stringify(X(r))),ie(r),i.warn("Graph after XAX:",JSON.stringify(X(r)));let d=M();await R(o,r,e.type,e.diagramId,void 0,d)},"render");export{oe as render};
