var $;import"./_Uint8Array-D5Z9rM2X.js";import"./isSymbol-xTSywenE.js";import"./_arrayMap-DQI2GUNb.js";import"./toString-CBnct2wx.js";import"./toNumber-CTOPJrpu.js";import"./toInteger-Bor4StOs.js";import"./isArrayLikeObject-DKyJYtr8.js";import"./_getTag-CVRrQL_Q.js";import"./_baseUniq-YWmHDCnr.js";import"./_baseIsEqual-BF8660ot.js";import"./chunk-4KMFLZZN-ByJDCN5Q.js";import"./_toKey-Di_xoXjD.js";import"./memoize-CAcr7Wct.js";import"./get-BYzWDFJH.js";import"./_baseFlatten-8yEsQJi9.js";import"./_basePickBy-W59-WIft.js";import"./merge-BgA7kxZb.js";import"./_baseSlice-B27Cqkm6.js";import"./_arrayReduce-DDpPg0Qh.js";import"./clone-CgXpsEJc.js";import"./_baseEach-Xz5DR2cc.js";import"./hasIn-WaG0qjy7.js";import"./_baseProperty-CIKnF2iY.js";import"./_createAggregator-DL8RwNg0.js";import"./min-hz9WUEOx.js";import"./_baseMap-DMMHaI20.js";import"./isEmpty-z92iM7uZ.js";import"./_baseSet-BlAtwuhp.js";import"./preload-helper-BpItL31i.js";import"./main-CD7jouuS.js";import{n as A}from"./ordinal-B8Ce3bue.js";import{t as T}from"./defaultLocale-DEOAvdte.js";import"./purify.es-D83HMRRD.js";import"./timer-9ePNNBwU.js";import{u as D}from"./src-D-O4qgKm.js";import"./math-Cpuq8NJh.js";import"./step-DCnHyPDa.js";import{i as _}from"./chunk-S3R3BYOJ-uZNU-Kd7.js";import"./init-PHOs_KoL.js";import{p as Y,t as Z}from"./treemap-DjDHyFZi.js";import{n as m,r as V}from"./src-Ci62OB0C.js";import{B as tt,C as et,U as at,_ as lt,a as rt,c as st,d as it,v as ot,y as G,z as nt}from"./chunk-ABZYJK2D-D-T6tPym.js";import{t as pt}from"./chunk-EXTU4WIE-DwsJ54Id.js";import{i as C,n as ct}from"./chunk-QYVHNE3D-B1-zbM-O.js";import"./dist-D3R7S_yk.js";import"./chunk-JEIROHC2-CdhV7PKh.js";import"./chunk-BN7GFLIU-BYSfwhAl.js";import"./chunk-T44TD3VJ-C-v8PEdO.js";import"./chunk-KMC2YHZD-CqzrHQLs.js";import"./chunk-WFWHJNB7-BUr8j7nr.js";import"./chunk-WFRQ32O7-BDpPnmW5.js";import"./chunk-XRWGC2XP-B3B1fnQJ.js";import{t as dt}from"./chunk-4BX2VUAB-BDDhRllH.js";import{t as mt}from"./mermaid-parser.core-DX_Wqjrp.js";import{t as ht}from"./chunk-QN33PNHL-Cel_Mjzr.js";var O=($=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=tt,this.getAccTitle=ot,this.setDiagramTitle=at,this.getDiagramTitle=et,this.getAccDescription=lt,this.setAccDescription=nt}getNodes(){return this.nodes}getConfig(){let a=it,i=G();return _({...a.treemap,...i.treemap??{}})}addNode(a,i){this.nodes.push(a),this.levels.set(a,i),i===0&&(this.outerNodes.push(a),this.root??(this.root=a))}getRoot(){return{name:"",children:this.outerNodes}}addClass(a,i){let r=this.classes.get(a)??{id:a,styles:[],textStyles:[]},n=i.replace(/\\,/g,"\xA7\xA7\xA7").replace(/,/g,";").replace(/§§§/g,",").split(";");n&&n.forEach(s=>{ct(s)&&(r!=null&&r.textStyles?r.textStyles.push(s):r.textStyles=[s]),r!=null&&r.styles?r.styles.push(s):r.styles=[s]}),this.classes.set(a,r)}getClasses(){return this.classes}getStylesForClass(a){var i;return((i=this.classes.get(a))==null?void 0:i.styles)??[]}clear(){rt(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},m($,"TreeMapDB"),$);function U(p){if(!p.length)return[];let a=[],i=[];return p.forEach(r=>{let n={name:r.name,children:r.type==="Leaf"?void 0:[]};for(n.classSelector=r==null?void 0:r.classSelector,r!=null&&r.cssCompiledStyles&&(n.cssCompiledStyles=[r.cssCompiledStyles]),r.type==="Leaf"&&r.value!==void 0&&(n.value=r.value);i.length>0&&i[i.length-1].level>=r.level;)i.pop();if(i.length===0)a.push(n);else{let s=i[i.length-1].node;s.children?s.children.push(n):s.children=[n]}r.type!=="Leaf"&&i.push({node:n,level:r.level})}),a}m(U,"buildHierarchy");var yt=m((p,a)=>{dt(p,a);let i=[];for(let s of p.TreemapRows??[])s.$type==="ClassDefStatement"&&a.addClass(s.className??"",s.styleText??"");for(let s of p.TreemapRows??[]){let c=s.item;if(!c)continue;let y=s.indent?parseInt(s.indent):0,z=ft(c),l=c.classSelector?a.getStylesForClass(c.classSelector):[],w=l.length>0?l.join(";"):void 0,g={level:y,name:z,type:c.$type,value:c.value,classSelector:c.classSelector,cssCompiledStyles:w};i.push(g)}let r=U(i),n=m((s,c)=>{for(let y of s)a.addNode(y,c),y.children&&y.children.length>0&&n(y.children,c+1)},"addNodesRecursively");n(r,0)},"populate"),ft=m(p=>p.name?String(p.name):"","getItemName"),q={parser:{yy:void 0},parse:m(async p=>{var a;try{let i=await mt("treemap",p);V.debug("Treemap AST:",i);let r=(a=q.parser)==null?void 0:a.yy;if(!(r instanceof O))throw Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");yt(i,r)}catch(i){throw V.error("Error parsing treemap:",i),i}},"parse")},ut=10,v=10,M=25,St={draw:m((p,a,i,r)=>{let n=r.db,s=n.getConfig(),c=s.padding??ut,y=n.getDiagramTitle(),z=n.getRoot(),{themeVariables:l}=G();if(!z)return;let w=y?30:0,g=pt(a),E=s.nodeWidth?s.nodeWidth*v:960,R=s.nodeHeight?s.nodeHeight*v:500,W=E,B=R+w;g.attr("viewBox",`0 0 ${W} ${B}`),st(g,B,W,s.useMaxWidth);let x;try{let t=s.valueFormat||",";if(t==="$0,0")x=m(e=>"$"+T(",")(e),"valueFormat");else if(t.startsWith("$")&&t.includes(",")){let e=/\.\d+/.exec(t),d=e?e[0]:"";x=m(f=>"$"+T(","+d)(f),"valueFormat")}else if(t.startsWith("$")){let e=t.substring(1);x=m(d=>"$"+T(e||"")(d),"valueFormat")}else x=T(t)}catch(t){V.error("Error creating format function:",t),x=T(",")}let L=A().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),J=A().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),F=A().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);y&&g.append("text").attr("x",W/2).attr("y",w/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(y);let I=g.append("g").attr("transform",`translate(0, ${w})`).attr("class","treemapContainer"),K=Y(z).sum(t=>t.value??0).sort((t,e)=>(e.value??0)-(t.value??0)),j=Z().size([E,R]).paddingTop(t=>t.children&&t.children.length>0?M+v:0).paddingInner(c).paddingLeft(t=>t.children&&t.children.length>0?v:0).paddingRight(t=>t.children&&t.children.length>0?v:0).paddingBottom(t=>t.children&&t.children.length>0?v:0).round(!0)(K),Q=j.descendants().filter(t=>t.children&&t.children.length>0),k=I.selectAll(".treemapSection").data(Q).enter().append("g").attr("class","treemapSection").attr("transform",t=>`translate(${t.x0},${t.y0})`);k.append("rect").attr("width",t=>t.x1-t.x0).attr("height",M).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",t=>t.depth===0?"display: none;":""),k.append("clipPath").attr("id",(t,e)=>`clip-section-${a}-${e}`).append("rect").attr("width",t=>Math.max(0,t.x1-t.x0-12)).attr("height",M),k.append("rect").attr("width",t=>t.x1-t.x0).attr("height",t=>t.y1-t.y0).attr("class",(t,e)=>`treemapSection section${e}`).attr("fill",t=>L(t.data.name)).attr("fill-opacity",.6).attr("stroke",t=>J(t.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",t=>{if(t.depth===0)return"display: none;";let e=C({cssCompiledStyles:t.data.cssCompiledStyles});return e.nodeStyles+";"+e.borderStyles.join(";")}),k.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",M/2).attr("dominant-baseline","middle").text(t=>t.depth===0?"":t.data.name).attr("font-weight","bold").attr("style",t=>t.depth===0?"display: none;":"dominant-baseline: middle; font-size: 12px; fill:"+F(t.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).each(function(t){if(t.depth===0)return;let e=D(this),d=t.data.name;e.text(d);let f=t.x1-t.x0,S;S=s.showValues!==!1&&t.value?f-10-30-10-6:f-6-6;let h=Math.max(15,S),u=e.node();if(u.getComputedTextLength()>h){let o=d;for(;o.length>0;){if(o=d.substring(0,o.length-1),o.length===0){e.text("..."),u.getComputedTextLength()>h&&e.text("");break}if(e.text(o+"..."),u.getComputedTextLength()<=h)break}}}),s.showValues!==!1&&k.append("text").attr("class","treemapSectionValue").attr("x",t=>t.x1-t.x0-10).attr("y",M/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(t=>t.value?x(t.value):"").attr("font-style","italic").attr("style",t=>t.depth===0?"display: none;":"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+F(t.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"));let X=j.leaves(),P=I.selectAll(".treemapLeafGroup").data(X).enter().append("g").attr("class",(t,e)=>`treemapNode treemapLeafGroup leaf${e}${t.data.classSelector?` ${t.data.classSelector}`:""}x`).attr("transform",t=>`translate(${t.x0},${t.y0})`);P.append("rect").attr("width",t=>t.x1-t.x0).attr("height",t=>t.y1-t.y0).attr("class","treemapLeaf").attr("fill",t=>t.parent?L(t.parent.data.name):L(t.data.name)).attr("style",t=>C({cssCompiledStyles:t.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",t=>t.parent?L(t.parent.data.name):L(t.data.name)).attr("stroke-width",3),P.append("clipPath").attr("id",(t,e)=>`clip-${a}-${e}`).append("rect").attr("width",t=>Math.max(0,t.x1-t.x0-4)).attr("height",t=>Math.max(0,t.y1-t.y0-4)),P.append("text").attr("class","treemapLabel").attr("x",t=>(t.x1-t.x0)/2).attr("y",t=>(t.y1-t.y0)/2).attr("style",t=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+F(t.data.name)+";"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(t,e)=>`url(#clip-${a}-${e})`).text(t=>t.data.name).each(function(t){let e=D(this),d=t.x1-t.x0,f=t.y1-t.y0,S=e.node(),h=d-8,u=f-8;if(h<10||u<10){e.style("display","none");return}let o=parseInt(e.style("font-size"),10),N=.6;for(;S.getComputedTextLength()>h&&o>8;)o--,e.style("font-size",`${o}px`);let b=Math.max(6,Math.min(28,Math.round(o*N))),H=o+2+b;for(;H>u&&o>8&&(o--,b=Math.max(6,Math.min(28,Math.round(o*N))),!(b<6&&o===8));)e.style("font-size",`${o}px`),H=o+2+b;e.style("font-size",`${o}px`),(S.getComputedTextLength()>h||o<8||u<o)&&e.style("display","none")}),s.showValues!==!1&&P.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+F(t.data.name)+";"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(t,e)=>`url(#clip-${a}-${e})`).text(t=>t.value?x(t.value):"").each(function(t){let e=D(this),d=this.parentNode;if(!d){e.style("display","none");return}let f=D(d).select(".treemapLabel");if(f.empty()||f.style("display")==="none"){e.style("display","none");return}let S=parseFloat(f.style("font-size")),h=Math.max(6,Math.min(28,Math.round(S*.6)));e.style("font-size",`${h}px`);let u=(t.y1-t.y0)/2+S/2+2;e.attr("y",u);let o=t.x1-t.x0,N=t.y1-t.y0-4,b=o-8;e.node().getComputedTextLength()>b||u+h>N||h<6?e.style("display","none"):e.style("display",null)}),ht(g,s.diagramPadding??8,"flowchart",(s==null?void 0:s.useMaxWidth)||!1)},"draw"),getClasses:m(function(p,a){return a.db.getClasses()},"getClasses")},gt={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},xt={parser:q,get db(){return new O},renderer:St,styles:m(({treemap:p}={})=>{let a=_(gt,p);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles")};export{xt as diagram};
